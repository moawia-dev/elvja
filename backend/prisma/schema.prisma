generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        String    @id @default(uuid())
  name      String
  ownerId   String?
  campaigns Campaign[]
  brandkit  Brandkit?
  users     User[]    @relation("AccountUsers") // <-- add this line
  createdAt DateTime  @default(now())
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  role      String    @default("user")
  accounts  Account[] @relation("AccountUsers")
  createdAt DateTime  @default(now())
}

model Campaign {
  id        String    @id @default(uuid())
  name      String
  accountId String
  account   Account   @relation(fields: [accountId], references: [id])
  creatives Creative[]
  reports   Report[]
  createdAt DateTime @default(now())
}

enum CreativeType {
  TEXT
  IMAGE
  VIDEO
}

model Creative {
  id         String       @id @default(uuid())
  campaignId String
  campaign   Campaign     @relation(fields: [campaignId], references: [id])
  type       CreativeType
  headline   String?
  body       String?
  imageUrl   String?
  createdAt  DateTime @default(now())
}

model Report {
  id          String   @id @default(uuid())
  campaignId  String
  campaign    Campaign @relation(fields: [campaignId], references: [id])
  periodStart DateTime
  periodEnd   DateTime
  metrics     Json
}

model Brandkit {
  id        String   @id @default(uuid())
  accountId String   @unique
  account   Account  @relation(fields: [accountId], references: [id])
  primary   String   @default("#6B8355")
  secondary String   @default("#A3B18A")
  font      String?
  logoUrl   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



// Update Account to have users
enum Currency { SEK }
enum Country { SE }
model Tenant {
  id           String   @id @default(cuid())
  name         String
  country      Country  @default(SE)
  currency     Currency @default(SEK)
  users        User[]
  campaigns    Campaign[]
  apiCreds     ApiCredential[]
  creatives    Creative[]
  createdAt    DateTime @default(now())
}
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      String   @default("creator")
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  createdAt DateTime @default(now())
}
model Campaign {
  id         String   @id @default(cuid())
  tenantId   String
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  name       String
  channel    String
  status     String   @default("active")
  createdAt  DateTime @default(now())
  metrics    CampaignMetric[]
  budgetRules BudgetRule[]
}
model CampaignMetric {
  id          String   @id @default(cuid())
  campaignId  String
  campaign    Campaign @relation(fields: [campaignId], references: [id])
  date        DateTime
  spend       Int
  clicks      Int
  conversions Int?
  revenue     Int?
  currency    Currency @default(SEK)
}
model ReportCache {
  id         String   @id @default(cuid())
  tenantId   String
  period     String
  scope      String
  payload    Json
  currency   Currency @default(SEK)
  createdAt  DateTime @default(now())
}
model Creative {
  id           String   @id @default(cuid())
  tenantId     String
  tenant       Tenant   @relation(fields: [tenantId], references: [id])
  source       String
  title        String?
  body         String?
  format       String?
  mediaAssetId String?
  createdAt    DateTime @default(now())
}
model MediaAsset {
  id        String   @id @default(cuid())
  tenantId  String
  url       String
  kind      String
  width     Int?
  height    Int?
  createdAt DateTime @default(now())
}
model ApiCredential {
  id        String   @id @default(cuid())
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  provider  String
  payload   Json
  createdAt DateTime @default(now())
}
model BudgetRule {
  id          String   @id @default(cuid())
  campaignId  String
  campaign    Campaign @relation(fields: [campaignId], references: [id])
  minDailyKr  Int
  maxDailyKr  Int
  status      String   @default("active")
  createdAt   DateTime @default(now())
}
model JobLog {
  id        String   @id @default(cuid())
  type      String
  refId     String?
  status    String
  details   Json?
  createdAt DateTime @default(now())
}
